# version: '3.8' docker-compose config return a warning version is obsolete


services:

  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    networks:
      - inception
    ports:
      - "443:443"
    secrets:
      - source: self_certif_privkey
        target: /run/secrets/self_certif_privkey
      - source: self_certif_public
        target: /run/secrets/self_certif_public
    volumes:
      - ./requirements/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./requirements/nginx/html/hello_world.html:/usr/share/nginx/html/index.html
    depends_on:
      - wordpress
        #  condition: service_healthy

  wordpress:
    container_name: wordpress
    user: "root"
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    networks:
      - inception
    ports:
      - "9000:9000"
    secrets:
      - source: db_name 
        target: /run/secrets/db_name
      - source: db_pass
        target: /run/secrets/db_pass
      - source: db_host 
        target: /run/secrets/db_host
      - source: db_user
        target: /run/secrets/db_user
      - source: wp_super_user
        target: /run/secrets/wp_super_user
      - source: wp_super_user_pass
        target: /run/secrets/wp_super_user_pass
      - source: wp_super_user_mail
        target: /run/secrets/wp_super_user_mail
    volumes:
      - wordpress_data:/var/www/html
      - ./requirements/wordpress/setup-wordpress.sh:/usr/local/bin/setup-wordpress.sh
    depends_on:
      - mariadb
      #  condition: service_healthy

  mariadb:
    container_name: mariadb 
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    networks:
      - inception
    ports:
      - "3306:3306"
    secrets:
      - source: mysql_root_phrase
        target: mysql_root_phrase
      - source: db_name 
        target: /run/secrets/db_name
      - source: db_user
        target: /run/secrets/db_user
      - source: db_pass
        target: /run/secrets/db_pass
    volumes:
      - mariadb_data:/var/lib/mysql


volumes:
  wordpress_data:
  mariadb_data:

networks:
  inception:
    name: inception

secrets:
  # NGINX
  self_certif_privkey:
    name: self_certif_privkey
    file: .env/certificate/privkey.pem
      #    external: true ----> unauthorized should use docker swarm instead of docker-compose to make it possible
  self_certif_public:
    name: self_certif_public
    file: .env/certificate/my-cert.crt
  # WORDPRESS & DATA BASE
  db_name:
    name: db_name
    file: .env/.secrets/db_name.txt
  db_pass:
    name: db_pass
    file: .env/.secrets/db_pass.txt
  db_host:
    name: db_host
    file: .env/.secrets/db_host.txt
  db_user:
    name: db_user
    file: .env/.secrets/db_name.txt
  wp_super_user:
    name: wp_super_user
    file: .env/.secrets/wp_super_user.txt
  wp_super_user_pass:
    name: wp_super_user_pass
    file: .env/.secrets/wp_super_user_pass.txt
  wp_super_user_mail:
    name: wp_super_user_mail
    file: .env/.secrets/wp_super_user_email.txt
  # MARIDB
  mysql_root_phrase:
    name: mysql_root_phrase
    file: .env/.secrets/mysql_root_phrase.txt
configs:
  nginx-config:
    file: ./requirements/nginx/config/nginx.conf
